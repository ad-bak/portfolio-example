/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 car.gltf --transform 
Files: car.gltf [775.65KB] > car-transformed.glb [159.83KB] (79%)
Author: Daniel Zhabotinsky (https://sketchfab.com/DanielZhabotinsky)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/british-compact-car-low-poly-model-f1e9c43c61bb492a9b15d84f9a16c0f7
Title: British compact car - Low poly model
*/

import { useGLTF } from "@react-three/drei";

export default function Car(props) {
  const { nodes, materials } = useGLTF("/car-transformed.glb");

  if (materials.PaletteMaterial002) {
    materials.PaletteMaterial002.color.set(0x923345);
    materials.PaletteMaterial002.opacity = 10;
    materials.PaletteMaterial002.transparent = true;
  }

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.bumper_rear_ASTNMINI_CHROME_0.geometry}
        material={materials.PaletteMaterial001}
        position={[59.286, 12.769, 14.623]}
        rotation={[0, -Math.PI / 2, 0]}
      />
      <mesh
        geometry={nodes.tier_ASTNMINI_tier_1t_0.geometry}
        material={materials.ASTNMINI_tier_1t}
        position={[-41.359, 9.987, 27.891]}
        scale={[0.313, 0.313, 0.276]}
      />
      <mesh
        geometry={nodes.backlights_glass_ASTNMINI_headlights_ucb_0.geometry}
        material={materials.ASTNMINI_headlights_ucb}
        position={[-41.168, 9.879, 25.853]}
      />
      <mesh
        geometry={nodes.glass_ASTNMINI_GLASS_0.geometry}
        material={materials.PaletteMaterial002}
        position={[-41.168, 9.879, 25.853]}
      />
    </group>
  );
}

useGLTF.preload("/car-transformed.glb");
